// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: converter.proto

package com.satalia.solveengine.converter;

/**
 * <pre>
 * Solver output
 * </pre>
 *
 * Protobuf type {@code solver.converter.Result}
 */
public  final class Result extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:solver.converter.Result)
    ResultOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Result.newBuilder() to construct.
  private Result(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Result() {
    status_ = "";
    variables_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Result(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            status_ = s;
            break;
          }
          case 17: {
            objValueCase_ = 2;
            objValue_ = input.readDouble();
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              variables_ = new java.util.ArrayList<com.satalia.solveengine.converter.Variable>();
              mutable_bitField0_ |= 0x00000004;
            }
            variables_.add(
                input.readMessage(com.satalia.solveengine.converter.Variable.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        variables_ = java.util.Collections.unmodifiableList(variables_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.satalia.solveengine.converter.Converter.internal_static_solver_converter_Result_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.satalia.solveengine.converter.Converter.internal_static_solver_converter_Result_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.satalia.solveengine.converter.Result.class, com.satalia.solveengine.converter.Result.Builder.class);
  }

  private int bitField0_;
  private int objValueCase_ = 0;
  private java.lang.Object objValue_;
  public enum ObjValueCase
      implements com.google.protobuf.Internal.EnumLite {
    OBJECTIVE_VALUE(2),
    OBJVALUE_NOT_SET(0);
    private final int value;
    private ObjValueCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ObjValueCase valueOf(int value) {
      return forNumber(value);
    }

    public static ObjValueCase forNumber(int value) {
      switch (value) {
        case 2: return OBJECTIVE_VALUE;
        case 0: return OBJVALUE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ObjValueCase
  getObjValueCase() {
    return ObjValueCase.forNumber(
        objValueCase_);
  }

  public static final int STATUS_FIELD_NUMBER = 1;
  private volatile java.lang.Object status_;
  /**
   * <pre>
   * Status of the job
   * </pre>
   *
   * <code>string status = 1;</code>
   */
  public java.lang.String getStatus() {
    java.lang.Object ref = status_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      status_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Status of the job
   * </pre>
   *
   * <code>string status = 1;</code>
   */
  public com.google.protobuf.ByteString
      getStatusBytes() {
    java.lang.Object ref = status_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      status_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OBJECTIVE_VALUE_FIELD_NUMBER = 2;
  /**
   * <code>double objective_value = 2[json_name = "objective_value"];</code>
   */
  public double getObjectiveValue() {
    if (objValueCase_ == 2) {
      return (java.lang.Double) objValue_;
    }
    return 0D;
  }

  public static final int VARIABLES_FIELD_NUMBER = 3;
  private java.util.List<com.satalia.solveengine.converter.Variable> variables_;
  /**
   * <pre>
   * A list of variables
   * </pre>
   *
   * <code>repeated .solver.converter.Variable variables = 3;</code>
   */
  public java.util.List<com.satalia.solveengine.converter.Variable> getVariablesList() {
    return variables_;
  }
  /**
   * <pre>
   * A list of variables
   * </pre>
   *
   * <code>repeated .solver.converter.Variable variables = 3;</code>
   */
  public java.util.List<? extends com.satalia.solveengine.converter.VariableOrBuilder> 
      getVariablesOrBuilderList() {
    return variables_;
  }
  /**
   * <pre>
   * A list of variables
   * </pre>
   *
   * <code>repeated .solver.converter.Variable variables = 3;</code>
   */
  public int getVariablesCount() {
    return variables_.size();
  }
  /**
   * <pre>
   * A list of variables
   * </pre>
   *
   * <code>repeated .solver.converter.Variable variables = 3;</code>
   */
  public com.satalia.solveengine.converter.Variable getVariables(int index) {
    return variables_.get(index);
  }
  /**
   * <pre>
   * A list of variables
   * </pre>
   *
   * <code>repeated .solver.converter.Variable variables = 3;</code>
   */
  public com.satalia.solveengine.converter.VariableOrBuilder getVariablesOrBuilder(
      int index) {
    return variables_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getStatusBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, status_);
    }
    if (objValueCase_ == 2) {
      output.writeDouble(
          2, (double)((java.lang.Double) objValue_));
    }
    for (int i = 0; i < variables_.size(); i++) {
      output.writeMessage(3, variables_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getStatusBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, status_);
    }
    if (objValueCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(
            2, (double)((java.lang.Double) objValue_));
    }
    for (int i = 0; i < variables_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, variables_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.satalia.solveengine.converter.Result)) {
      return super.equals(obj);
    }
    com.satalia.solveengine.converter.Result other = (com.satalia.solveengine.converter.Result) obj;

    boolean result = true;
    result = result && getStatus()
        .equals(other.getStatus());
    result = result && getVariablesList()
        .equals(other.getVariablesList());
    result = result && getObjValueCase().equals(
        other.getObjValueCase());
    if (!result) return false;
    switch (objValueCase_) {
      case 2:
        result = result && (
            java.lang.Double.doubleToLongBits(getObjectiveValue())
            == java.lang.Double.doubleToLongBits(
                other.getObjectiveValue()));
        break;
      case 0:
      default:
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + STATUS_FIELD_NUMBER;
    hash = (53 * hash) + getStatus().hashCode();
    if (getVariablesCount() > 0) {
      hash = (37 * hash) + VARIABLES_FIELD_NUMBER;
      hash = (53 * hash) + getVariablesList().hashCode();
    }
    switch (objValueCase_) {
      case 2:
        hash = (37 * hash) + OBJECTIVE_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getObjectiveValue()));
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.satalia.solveengine.converter.Result parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.satalia.solveengine.converter.Result parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.satalia.solveengine.converter.Result parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.satalia.solveengine.converter.Result parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.satalia.solveengine.converter.Result parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.satalia.solveengine.converter.Result parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.satalia.solveengine.converter.Result parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.satalia.solveengine.converter.Result parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.satalia.solveengine.converter.Result parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.satalia.solveengine.converter.Result parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.satalia.solveengine.converter.Result parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.satalia.solveengine.converter.Result parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.satalia.solveengine.converter.Result prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Solver output
   * </pre>
   *
   * Protobuf type {@code solver.converter.Result}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:solver.converter.Result)
      com.satalia.solveengine.converter.ResultOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satalia.solveengine.converter.Converter.internal_static_solver_converter_Result_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satalia.solveengine.converter.Converter.internal_static_solver_converter_Result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satalia.solveengine.converter.Result.class, com.satalia.solveengine.converter.Result.Builder.class);
    }

    // Construct using com.satalia.solveengine.converter.Result.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getVariablesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      status_ = "";

      if (variablesBuilder_ == null) {
        variables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        variablesBuilder_.clear();
      }
      objValueCase_ = 0;
      objValue_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.satalia.solveengine.converter.Converter.internal_static_solver_converter_Result_descriptor;
    }

    @java.lang.Override
    public com.satalia.solveengine.converter.Result getDefaultInstanceForType() {
      return com.satalia.solveengine.converter.Result.getDefaultInstance();
    }

    @java.lang.Override
    public com.satalia.solveengine.converter.Result build() {
      com.satalia.solveengine.converter.Result result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.satalia.solveengine.converter.Result buildPartial() {
      com.satalia.solveengine.converter.Result result = new com.satalia.solveengine.converter.Result(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.status_ = status_;
      if (objValueCase_ == 2) {
        result.objValue_ = objValue_;
      }
      if (variablesBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          variables_ = java.util.Collections.unmodifiableList(variables_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.variables_ = variables_;
      } else {
        result.variables_ = variablesBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      result.objValueCase_ = objValueCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.satalia.solveengine.converter.Result) {
        return mergeFrom((com.satalia.solveengine.converter.Result)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.satalia.solveengine.converter.Result other) {
      if (other == com.satalia.solveengine.converter.Result.getDefaultInstance()) return this;
      if (!other.getStatus().isEmpty()) {
        status_ = other.status_;
        onChanged();
      }
      if (variablesBuilder_ == null) {
        if (!other.variables_.isEmpty()) {
          if (variables_.isEmpty()) {
            variables_ = other.variables_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureVariablesIsMutable();
            variables_.addAll(other.variables_);
          }
          onChanged();
        }
      } else {
        if (!other.variables_.isEmpty()) {
          if (variablesBuilder_.isEmpty()) {
            variablesBuilder_.dispose();
            variablesBuilder_ = null;
            variables_ = other.variables_;
            bitField0_ = (bitField0_ & ~0x00000004);
            variablesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getVariablesFieldBuilder() : null;
          } else {
            variablesBuilder_.addAllMessages(other.variables_);
          }
        }
      }
      switch (other.getObjValueCase()) {
        case OBJECTIVE_VALUE: {
          setObjectiveValue(other.getObjectiveValue());
          break;
        }
        case OBJVALUE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.satalia.solveengine.converter.Result parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.satalia.solveengine.converter.Result) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int objValueCase_ = 0;
    private java.lang.Object objValue_;
    public ObjValueCase
        getObjValueCase() {
      return ObjValueCase.forNumber(
          objValueCase_);
    }

    public Builder clearObjValue() {
      objValueCase_ = 0;
      objValue_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object status_ = "";
    /**
     * <pre>
     * Status of the job
     * </pre>
     *
     * <code>string status = 1;</code>
     */
    public java.lang.String getStatus() {
      java.lang.Object ref = status_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        status_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Status of the job
     * </pre>
     *
     * <code>string status = 1;</code>
     */
    public com.google.protobuf.ByteString
        getStatusBytes() {
      java.lang.Object ref = status_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        status_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Status of the job
     * </pre>
     *
     * <code>string status = 1;</code>
     */
    public Builder setStatus(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      status_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Status of the job
     * </pre>
     *
     * <code>string status = 1;</code>
     */
    public Builder clearStatus() {
      
      status_ = getDefaultInstance().getStatus();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Status of the job
     * </pre>
     *
     * <code>string status = 1;</code>
     */
    public Builder setStatusBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      status_ = value;
      onChanged();
      return this;
    }

    /**
     * <code>double objective_value = 2[json_name = "objective_value"];</code>
     */
    public double getObjectiveValue() {
      if (objValueCase_ == 2) {
        return (java.lang.Double) objValue_;
      }
      return 0D;
    }
    /**
     * <code>double objective_value = 2[json_name = "objective_value"];</code>
     */
    public Builder setObjectiveValue(double value) {
      objValueCase_ = 2;
      objValue_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double objective_value = 2[json_name = "objective_value"];</code>
     */
    public Builder clearObjectiveValue() {
      if (objValueCase_ == 2) {
        objValueCase_ = 0;
        objValue_ = null;
        onChanged();
      }
      return this;
    }

    private java.util.List<com.satalia.solveengine.converter.Variable> variables_ =
      java.util.Collections.emptyList();
    private void ensureVariablesIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        variables_ = new java.util.ArrayList<com.satalia.solveengine.converter.Variable>(variables_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.satalia.solveengine.converter.Variable, com.satalia.solveengine.converter.Variable.Builder, com.satalia.solveengine.converter.VariableOrBuilder> variablesBuilder_;

    /**
     * <pre>
     * A list of variables
     * </pre>
     *
     * <code>repeated .solver.converter.Variable variables = 3;</code>
     */
    public java.util.List<com.satalia.solveengine.converter.Variable> getVariablesList() {
      if (variablesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(variables_);
      } else {
        return variablesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * A list of variables
     * </pre>
     *
     * <code>repeated .solver.converter.Variable variables = 3;</code>
     */
    public int getVariablesCount() {
      if (variablesBuilder_ == null) {
        return variables_.size();
      } else {
        return variablesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * A list of variables
     * </pre>
     *
     * <code>repeated .solver.converter.Variable variables = 3;</code>
     */
    public com.satalia.solveengine.converter.Variable getVariables(int index) {
      if (variablesBuilder_ == null) {
        return variables_.get(index);
      } else {
        return variablesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * A list of variables
     * </pre>
     *
     * <code>repeated .solver.converter.Variable variables = 3;</code>
     */
    public Builder setVariables(
        int index, com.satalia.solveengine.converter.Variable value) {
      if (variablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariablesIsMutable();
        variables_.set(index, value);
        onChanged();
      } else {
        variablesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of variables
     * </pre>
     *
     * <code>repeated .solver.converter.Variable variables = 3;</code>
     */
    public Builder setVariables(
        int index, com.satalia.solveengine.converter.Variable.Builder builderForValue) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        variables_.set(index, builderForValue.build());
        onChanged();
      } else {
        variablesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of variables
     * </pre>
     *
     * <code>repeated .solver.converter.Variable variables = 3;</code>
     */
    public Builder addVariables(com.satalia.solveengine.converter.Variable value) {
      if (variablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariablesIsMutable();
        variables_.add(value);
        onChanged();
      } else {
        variablesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of variables
     * </pre>
     *
     * <code>repeated .solver.converter.Variable variables = 3;</code>
     */
    public Builder addVariables(
        int index, com.satalia.solveengine.converter.Variable value) {
      if (variablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariablesIsMutable();
        variables_.add(index, value);
        onChanged();
      } else {
        variablesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of variables
     * </pre>
     *
     * <code>repeated .solver.converter.Variable variables = 3;</code>
     */
    public Builder addVariables(
        com.satalia.solveengine.converter.Variable.Builder builderForValue) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        variables_.add(builderForValue.build());
        onChanged();
      } else {
        variablesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of variables
     * </pre>
     *
     * <code>repeated .solver.converter.Variable variables = 3;</code>
     */
    public Builder addVariables(
        int index, com.satalia.solveengine.converter.Variable.Builder builderForValue) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        variables_.add(index, builderForValue.build());
        onChanged();
      } else {
        variablesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of variables
     * </pre>
     *
     * <code>repeated .solver.converter.Variable variables = 3;</code>
     */
    public Builder addAllVariables(
        java.lang.Iterable<? extends com.satalia.solveengine.converter.Variable> values) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, variables_);
        onChanged();
      } else {
        variablesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * A list of variables
     * </pre>
     *
     * <code>repeated .solver.converter.Variable variables = 3;</code>
     */
    public Builder clearVariables() {
      if (variablesBuilder_ == null) {
        variables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        variablesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A list of variables
     * </pre>
     *
     * <code>repeated .solver.converter.Variable variables = 3;</code>
     */
    public Builder removeVariables(int index) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        variables_.remove(index);
        onChanged();
      } else {
        variablesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * A list of variables
     * </pre>
     *
     * <code>repeated .solver.converter.Variable variables = 3;</code>
     */
    public com.satalia.solveengine.converter.Variable.Builder getVariablesBuilder(
        int index) {
      return getVariablesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * A list of variables
     * </pre>
     *
     * <code>repeated .solver.converter.Variable variables = 3;</code>
     */
    public com.satalia.solveengine.converter.VariableOrBuilder getVariablesOrBuilder(
        int index) {
      if (variablesBuilder_ == null) {
        return variables_.get(index);  } else {
        return variablesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * A list of variables
     * </pre>
     *
     * <code>repeated .solver.converter.Variable variables = 3;</code>
     */
    public java.util.List<? extends com.satalia.solveengine.converter.VariableOrBuilder> 
         getVariablesOrBuilderList() {
      if (variablesBuilder_ != null) {
        return variablesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(variables_);
      }
    }
    /**
     * <pre>
     * A list of variables
     * </pre>
     *
     * <code>repeated .solver.converter.Variable variables = 3;</code>
     */
    public com.satalia.solveengine.converter.Variable.Builder addVariablesBuilder() {
      return getVariablesFieldBuilder().addBuilder(
          com.satalia.solveengine.converter.Variable.getDefaultInstance());
    }
    /**
     * <pre>
     * A list of variables
     * </pre>
     *
     * <code>repeated .solver.converter.Variable variables = 3;</code>
     */
    public com.satalia.solveengine.converter.Variable.Builder addVariablesBuilder(
        int index) {
      return getVariablesFieldBuilder().addBuilder(
          index, com.satalia.solveengine.converter.Variable.getDefaultInstance());
    }
    /**
     * <pre>
     * A list of variables
     * </pre>
     *
     * <code>repeated .solver.converter.Variable variables = 3;</code>
     */
    public java.util.List<com.satalia.solveengine.converter.Variable.Builder> 
         getVariablesBuilderList() {
      return getVariablesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.satalia.solveengine.converter.Variable, com.satalia.solveengine.converter.Variable.Builder, com.satalia.solveengine.converter.VariableOrBuilder> 
        getVariablesFieldBuilder() {
      if (variablesBuilder_ == null) {
        variablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.satalia.solveengine.converter.Variable, com.satalia.solveengine.converter.Variable.Builder, com.satalia.solveengine.converter.VariableOrBuilder>(
                variables_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        variables_ = null;
      }
      return variablesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:solver.converter.Result)
  }

  // @@protoc_insertion_point(class_scope:solver.converter.Result)
  private static final com.satalia.solveengine.converter.Result DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.satalia.solveengine.converter.Result();
  }

  public static com.satalia.solveengine.converter.Result getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Result>
      PARSER = new com.google.protobuf.AbstractParser<Result>() {
    @java.lang.Override
    public Result parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Result(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Result> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Result> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.satalia.solveengine.converter.Result getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

