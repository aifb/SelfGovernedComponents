// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jobsvc.proto

package com.satalia.solveengine.jobsvc;

/**
 * <pre>
 * CreateJobRequest is sent when creating a new job
 * it contains a list of problems and a map of
 * solveEngine options.
 * </pre>
 *
 * Protobuf type {@code solver.jobs.CreateJobRequest}
 */
public  final class CreateJobRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:solver.jobs.CreateJobRequest)
    CreateJobRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CreateJobRequest.newBuilder() to construct.
  private CreateJobRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CreateJobRequest() {
    problems_ = java.util.Collections.emptyList();
    timeout_ = 0;
    datafiles_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CreateJobRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              options_ = com.google.protobuf.MapField.newMapField(
                  OptionsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            options__ = input.readMessage(
                OptionsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            options_.getMutableMap().put(
                options__.getKey(), options__.getValue());
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              problems_ = new java.util.ArrayList<com.satalia.solveengine.jobsvc.Problem>();
              mutable_bitField0_ |= 0x00000002;
            }
            problems_.add(
                input.readMessage(com.satalia.solveengine.jobsvc.Problem.parser(), extensionRegistry));
            break;
          }
          case 24: {

            timeout_ = input.readInt32();
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              datafiles_ = new java.util.ArrayList<com.satalia.solveengine.jobsvc.Problem>();
              mutable_bitField0_ |= 0x00000008;
            }
            datafiles_.add(
                input.readMessage(com.satalia.solveengine.jobsvc.Problem.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        problems_ = java.util.Collections.unmodifiableList(problems_);
      }
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        datafiles_ = java.util.Collections.unmodifiableList(datafiles_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.satalia.solveengine.jobsvc.Jobsvc.internal_static_solver_jobs_CreateJobRequest_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 1:
        return internalGetOptions();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.satalia.solveengine.jobsvc.Jobsvc.internal_static_solver_jobs_CreateJobRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.satalia.solveengine.jobsvc.CreateJobRequest.class, com.satalia.solveengine.jobsvc.CreateJobRequest.Builder.class);
  }

  private int bitField0_;
  public static final int OPTIONS_FIELD_NUMBER = 1;
  private static final class OptionsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.satalia.solveengine.jobsvc.Jobsvc.internal_static_solver_jobs_CreateJobRequest_OptionsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> options_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetOptions() {
    if (options_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          OptionsDefaultEntryHolder.defaultEntry);
    }
    return options_;
  }

  public int getOptionsCount() {
    return internalGetOptions().getMap().size();
  }
  /**
   * <pre>
   * A map of SolveEngine configuration options
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 1;</code>
   */

  public boolean containsOptions(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetOptions().getMap().containsKey(key);
  }
  /**
   * Use {@link #getOptionsMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getOptions() {
    return getOptionsMap();
  }
  /**
   * <pre>
   * A map of SolveEngine configuration options
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 1;</code>
   */

  public java.util.Map<java.lang.String, java.lang.String> getOptionsMap() {
    return internalGetOptions().getMap();
  }
  /**
   * <pre>
   * A map of SolveEngine configuration options
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 1;</code>
   */

  public java.lang.String getOptionsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetOptions().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * A map of SolveEngine configuration options
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 1;</code>
   */

  public java.lang.String getOptionsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetOptions().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int PROBLEMS_FIELD_NUMBER = 2;
  private java.util.List<com.satalia.solveengine.jobsvc.Problem> problems_;
  /**
   * <pre>
   * A list of job inputs
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem problems = 2;</code>
   */
  public java.util.List<com.satalia.solveengine.jobsvc.Problem> getProblemsList() {
    return problems_;
  }
  /**
   * <pre>
   * A list of job inputs
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem problems = 2;</code>
   */
  public java.util.List<? extends com.satalia.solveengine.jobsvc.ProblemOrBuilder> 
      getProblemsOrBuilderList() {
    return problems_;
  }
  /**
   * <pre>
   * A list of job inputs
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem problems = 2;</code>
   */
  public int getProblemsCount() {
    return problems_.size();
  }
  /**
   * <pre>
   * A list of job inputs
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem problems = 2;</code>
   */
  public com.satalia.solveengine.jobsvc.Problem getProblems(int index) {
    return problems_.get(index);
  }
  /**
   * <pre>
   * A list of job inputs
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem problems = 2;</code>
   */
  public com.satalia.solveengine.jobsvc.ProblemOrBuilder getProblemsOrBuilder(
      int index) {
    return problems_.get(index);
  }

  public static final int TIMEOUT_FIELD_NUMBER = 3;
  private int timeout_;
  /**
   * <pre>
   * The timeout for the solver in seconds (minimum=60)
   * </pre>
   *
   * <code>int32 timeout = 3;</code>
   */
  public int getTimeout() {
    return timeout_;
  }

  public static final int DATAFILES_FIELD_NUMBER = 4;
  private java.util.List<com.satalia.solveengine.jobsvc.Problem> datafiles_;
  /**
   * <pre>
   * A list of data files
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
   */
  public java.util.List<com.satalia.solveengine.jobsvc.Problem> getDatafilesList() {
    return datafiles_;
  }
  /**
   * <pre>
   * A list of data files
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
   */
  public java.util.List<? extends com.satalia.solveengine.jobsvc.ProblemOrBuilder> 
      getDatafilesOrBuilderList() {
    return datafiles_;
  }
  /**
   * <pre>
   * A list of data files
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
   */
  public int getDatafilesCount() {
    return datafiles_.size();
  }
  /**
   * <pre>
   * A list of data files
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
   */
  public com.satalia.solveengine.jobsvc.Problem getDatafiles(int index) {
    return datafiles_.get(index);
  }
  /**
   * <pre>
   * A list of data files
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
   */
  public com.satalia.solveengine.jobsvc.ProblemOrBuilder getDatafilesOrBuilder(
      int index) {
    return datafiles_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetOptions(),
        OptionsDefaultEntryHolder.defaultEntry,
        1);
    for (int i = 0; i < problems_.size(); i++) {
      output.writeMessage(2, problems_.get(i));
    }
    if (timeout_ != 0) {
      output.writeInt32(3, timeout_);
    }
    for (int i = 0; i < datafiles_.size(); i++) {
      output.writeMessage(4, datafiles_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetOptions().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      options__ = OptionsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, options__);
    }
    for (int i = 0; i < problems_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, problems_.get(i));
    }
    if (timeout_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, timeout_);
    }
    for (int i = 0; i < datafiles_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, datafiles_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.satalia.solveengine.jobsvc.CreateJobRequest)) {
      return super.equals(obj);
    }
    com.satalia.solveengine.jobsvc.CreateJobRequest other = (com.satalia.solveengine.jobsvc.CreateJobRequest) obj;

    boolean result = true;
    result = result && internalGetOptions().equals(
        other.internalGetOptions());
    result = result && getProblemsList()
        .equals(other.getProblemsList());
    result = result && (getTimeout()
        == other.getTimeout());
    result = result && getDatafilesList()
        .equals(other.getDatafilesList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetOptions().getMap().isEmpty()) {
      hash = (37 * hash) + OPTIONS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetOptions().hashCode();
    }
    if (getProblemsCount() > 0) {
      hash = (37 * hash) + PROBLEMS_FIELD_NUMBER;
      hash = (53 * hash) + getProblemsList().hashCode();
    }
    hash = (37 * hash) + TIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + getTimeout();
    if (getDatafilesCount() > 0) {
      hash = (37 * hash) + DATAFILES_FIELD_NUMBER;
      hash = (53 * hash) + getDatafilesList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.satalia.solveengine.jobsvc.CreateJobRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.satalia.solveengine.jobsvc.CreateJobRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.satalia.solveengine.jobsvc.CreateJobRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.satalia.solveengine.jobsvc.CreateJobRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.satalia.solveengine.jobsvc.CreateJobRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.satalia.solveengine.jobsvc.CreateJobRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.satalia.solveengine.jobsvc.CreateJobRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.satalia.solveengine.jobsvc.CreateJobRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.satalia.solveengine.jobsvc.CreateJobRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.satalia.solveengine.jobsvc.CreateJobRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.satalia.solveengine.jobsvc.CreateJobRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.satalia.solveengine.jobsvc.CreateJobRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.satalia.solveengine.jobsvc.CreateJobRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * CreateJobRequest is sent when creating a new job
   * it contains a list of problems and a map of
   * solveEngine options.
   * </pre>
   *
   * Protobuf type {@code solver.jobs.CreateJobRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:solver.jobs.CreateJobRequest)
      com.satalia.solveengine.jobsvc.CreateJobRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satalia.solveengine.jobsvc.Jobsvc.internal_static_solver_jobs_CreateJobRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetOptions();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMutableOptions();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satalia.solveengine.jobsvc.Jobsvc.internal_static_solver_jobs_CreateJobRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satalia.solveengine.jobsvc.CreateJobRequest.class, com.satalia.solveengine.jobsvc.CreateJobRequest.Builder.class);
    }

    // Construct using com.satalia.solveengine.jobsvc.CreateJobRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getProblemsFieldBuilder();
        getDatafilesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      internalGetMutableOptions().clear();
      if (problemsBuilder_ == null) {
        problems_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        problemsBuilder_.clear();
      }
      timeout_ = 0;

      if (datafilesBuilder_ == null) {
        datafiles_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        datafilesBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.satalia.solveengine.jobsvc.Jobsvc.internal_static_solver_jobs_CreateJobRequest_descriptor;
    }

    @java.lang.Override
    public com.satalia.solveengine.jobsvc.CreateJobRequest getDefaultInstanceForType() {
      return com.satalia.solveengine.jobsvc.CreateJobRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.satalia.solveengine.jobsvc.CreateJobRequest build() {
      com.satalia.solveengine.jobsvc.CreateJobRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.satalia.solveengine.jobsvc.CreateJobRequest buildPartial() {
      com.satalia.solveengine.jobsvc.CreateJobRequest result = new com.satalia.solveengine.jobsvc.CreateJobRequest(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.options_ = internalGetOptions();
      result.options_.makeImmutable();
      if (problemsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          problems_ = java.util.Collections.unmodifiableList(problems_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.problems_ = problems_;
      } else {
        result.problems_ = problemsBuilder_.build();
      }
      result.timeout_ = timeout_;
      if (datafilesBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          datafiles_ = java.util.Collections.unmodifiableList(datafiles_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.datafiles_ = datafiles_;
      } else {
        result.datafiles_ = datafilesBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.satalia.solveengine.jobsvc.CreateJobRequest) {
        return mergeFrom((com.satalia.solveengine.jobsvc.CreateJobRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.satalia.solveengine.jobsvc.CreateJobRequest other) {
      if (other == com.satalia.solveengine.jobsvc.CreateJobRequest.getDefaultInstance()) return this;
      internalGetMutableOptions().mergeFrom(
          other.internalGetOptions());
      if (problemsBuilder_ == null) {
        if (!other.problems_.isEmpty()) {
          if (problems_.isEmpty()) {
            problems_ = other.problems_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureProblemsIsMutable();
            problems_.addAll(other.problems_);
          }
          onChanged();
        }
      } else {
        if (!other.problems_.isEmpty()) {
          if (problemsBuilder_.isEmpty()) {
            problemsBuilder_.dispose();
            problemsBuilder_ = null;
            problems_ = other.problems_;
            bitField0_ = (bitField0_ & ~0x00000002);
            problemsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getProblemsFieldBuilder() : null;
          } else {
            problemsBuilder_.addAllMessages(other.problems_);
          }
        }
      }
      if (other.getTimeout() != 0) {
        setTimeout(other.getTimeout());
      }
      if (datafilesBuilder_ == null) {
        if (!other.datafiles_.isEmpty()) {
          if (datafiles_.isEmpty()) {
            datafiles_ = other.datafiles_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureDatafilesIsMutable();
            datafiles_.addAll(other.datafiles_);
          }
          onChanged();
        }
      } else {
        if (!other.datafiles_.isEmpty()) {
          if (datafilesBuilder_.isEmpty()) {
            datafilesBuilder_.dispose();
            datafilesBuilder_ = null;
            datafiles_ = other.datafiles_;
            bitField0_ = (bitField0_ & ~0x00000008);
            datafilesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDatafilesFieldBuilder() : null;
          } else {
            datafilesBuilder_.addAllMessages(other.datafiles_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.satalia.solveengine.jobsvc.CreateJobRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.satalia.solveengine.jobsvc.CreateJobRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> options_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetOptions() {
      if (options_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            OptionsDefaultEntryHolder.defaultEntry);
      }
      return options_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableOptions() {
      onChanged();;
      if (options_ == null) {
        options_ = com.google.protobuf.MapField.newMapField(
            OptionsDefaultEntryHolder.defaultEntry);
      }
      if (!options_.isMutable()) {
        options_ = options_.copy();
      }
      return options_;
    }

    public int getOptionsCount() {
      return internalGetOptions().getMap().size();
    }
    /**
     * <pre>
     * A map of SolveEngine configuration options
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 1;</code>
     */

    public boolean containsOptions(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetOptions().getMap().containsKey(key);
    }
    /**
     * Use {@link #getOptionsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getOptions() {
      return getOptionsMap();
    }
    /**
     * <pre>
     * A map of SolveEngine configuration options
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 1;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getOptionsMap() {
      return internalGetOptions().getMap();
    }
    /**
     * <pre>
     * A map of SolveEngine configuration options
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 1;</code>
     */

    public java.lang.String getOptionsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetOptions().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * A map of SolveEngine configuration options
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 1;</code>
     */

    public java.lang.String getOptionsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetOptions().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearOptions() {
      internalGetMutableOptions().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * A map of SolveEngine configuration options
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 1;</code>
     */

    public Builder removeOptions(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableOptions().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableOptions() {
      return internalGetMutableOptions().getMutableMap();
    }
    /**
     * <pre>
     * A map of SolveEngine configuration options
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 1;</code>
     */
    public Builder putOptions(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableOptions().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * A map of SolveEngine configuration options
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 1;</code>
     */

    public Builder putAllOptions(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableOptions().getMutableMap()
          .putAll(values);
      return this;
    }

    private java.util.List<com.satalia.solveengine.jobsvc.Problem> problems_ =
      java.util.Collections.emptyList();
    private void ensureProblemsIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        problems_ = new java.util.ArrayList<com.satalia.solveengine.jobsvc.Problem>(problems_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.satalia.solveengine.jobsvc.Problem, com.satalia.solveengine.jobsvc.Problem.Builder, com.satalia.solveengine.jobsvc.ProblemOrBuilder> problemsBuilder_;

    /**
     * <pre>
     * A list of job inputs
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem problems = 2;</code>
     */
    public java.util.List<com.satalia.solveengine.jobsvc.Problem> getProblemsList() {
      if (problemsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(problems_);
      } else {
        return problemsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * A list of job inputs
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem problems = 2;</code>
     */
    public int getProblemsCount() {
      if (problemsBuilder_ == null) {
        return problems_.size();
      } else {
        return problemsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * A list of job inputs
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem problems = 2;</code>
     */
    public com.satalia.solveengine.jobsvc.Problem getProblems(int index) {
      if (problemsBuilder_ == null) {
        return problems_.get(index);
      } else {
        return problemsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * A list of job inputs
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem problems = 2;</code>
     */
    public Builder setProblems(
        int index, com.satalia.solveengine.jobsvc.Problem value) {
      if (problemsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProblemsIsMutable();
        problems_.set(index, value);
        onChanged();
      } else {
        problemsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of job inputs
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem problems = 2;</code>
     */
    public Builder setProblems(
        int index, com.satalia.solveengine.jobsvc.Problem.Builder builderForValue) {
      if (problemsBuilder_ == null) {
        ensureProblemsIsMutable();
        problems_.set(index, builderForValue.build());
        onChanged();
      } else {
        problemsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of job inputs
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem problems = 2;</code>
     */
    public Builder addProblems(com.satalia.solveengine.jobsvc.Problem value) {
      if (problemsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProblemsIsMutable();
        problems_.add(value);
        onChanged();
      } else {
        problemsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of job inputs
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem problems = 2;</code>
     */
    public Builder addProblems(
        int index, com.satalia.solveengine.jobsvc.Problem value) {
      if (problemsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProblemsIsMutable();
        problems_.add(index, value);
        onChanged();
      } else {
        problemsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of job inputs
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem problems = 2;</code>
     */
    public Builder addProblems(
        com.satalia.solveengine.jobsvc.Problem.Builder builderForValue) {
      if (problemsBuilder_ == null) {
        ensureProblemsIsMutable();
        problems_.add(builderForValue.build());
        onChanged();
      } else {
        problemsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of job inputs
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem problems = 2;</code>
     */
    public Builder addProblems(
        int index, com.satalia.solveengine.jobsvc.Problem.Builder builderForValue) {
      if (problemsBuilder_ == null) {
        ensureProblemsIsMutable();
        problems_.add(index, builderForValue.build());
        onChanged();
      } else {
        problemsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of job inputs
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem problems = 2;</code>
     */
    public Builder addAllProblems(
        java.lang.Iterable<? extends com.satalia.solveengine.jobsvc.Problem> values) {
      if (problemsBuilder_ == null) {
        ensureProblemsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, problems_);
        onChanged();
      } else {
        problemsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * A list of job inputs
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem problems = 2;</code>
     */
    public Builder clearProblems() {
      if (problemsBuilder_ == null) {
        problems_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        problemsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A list of job inputs
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem problems = 2;</code>
     */
    public Builder removeProblems(int index) {
      if (problemsBuilder_ == null) {
        ensureProblemsIsMutable();
        problems_.remove(index);
        onChanged();
      } else {
        problemsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * A list of job inputs
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem problems = 2;</code>
     */
    public com.satalia.solveengine.jobsvc.Problem.Builder getProblemsBuilder(
        int index) {
      return getProblemsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * A list of job inputs
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem problems = 2;</code>
     */
    public com.satalia.solveengine.jobsvc.ProblemOrBuilder getProblemsOrBuilder(
        int index) {
      if (problemsBuilder_ == null) {
        return problems_.get(index);  } else {
        return problemsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * A list of job inputs
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem problems = 2;</code>
     */
    public java.util.List<? extends com.satalia.solveengine.jobsvc.ProblemOrBuilder> 
         getProblemsOrBuilderList() {
      if (problemsBuilder_ != null) {
        return problemsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(problems_);
      }
    }
    /**
     * <pre>
     * A list of job inputs
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem problems = 2;</code>
     */
    public com.satalia.solveengine.jobsvc.Problem.Builder addProblemsBuilder() {
      return getProblemsFieldBuilder().addBuilder(
          com.satalia.solveengine.jobsvc.Problem.getDefaultInstance());
    }
    /**
     * <pre>
     * A list of job inputs
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem problems = 2;</code>
     */
    public com.satalia.solveengine.jobsvc.Problem.Builder addProblemsBuilder(
        int index) {
      return getProblemsFieldBuilder().addBuilder(
          index, com.satalia.solveengine.jobsvc.Problem.getDefaultInstance());
    }
    /**
     * <pre>
     * A list of job inputs
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem problems = 2;</code>
     */
    public java.util.List<com.satalia.solveengine.jobsvc.Problem.Builder> 
         getProblemsBuilderList() {
      return getProblemsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.satalia.solveengine.jobsvc.Problem, com.satalia.solveengine.jobsvc.Problem.Builder, com.satalia.solveengine.jobsvc.ProblemOrBuilder> 
        getProblemsFieldBuilder() {
      if (problemsBuilder_ == null) {
        problemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.satalia.solveengine.jobsvc.Problem, com.satalia.solveengine.jobsvc.Problem.Builder, com.satalia.solveengine.jobsvc.ProblemOrBuilder>(
                problems_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        problems_ = null;
      }
      return problemsBuilder_;
    }

    private int timeout_ ;
    /**
     * <pre>
     * The timeout for the solver in seconds (minimum=60)
     * </pre>
     *
     * <code>int32 timeout = 3;</code>
     */
    public int getTimeout() {
      return timeout_;
    }
    /**
     * <pre>
     * The timeout for the solver in seconds (minimum=60)
     * </pre>
     *
     * <code>int32 timeout = 3;</code>
     */
    public Builder setTimeout(int value) {
      
      timeout_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The timeout for the solver in seconds (minimum=60)
     * </pre>
     *
     * <code>int32 timeout = 3;</code>
     */
    public Builder clearTimeout() {
      
      timeout_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.satalia.solveengine.jobsvc.Problem> datafiles_ =
      java.util.Collections.emptyList();
    private void ensureDatafilesIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        datafiles_ = new java.util.ArrayList<com.satalia.solveengine.jobsvc.Problem>(datafiles_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.satalia.solveengine.jobsvc.Problem, com.satalia.solveengine.jobsvc.Problem.Builder, com.satalia.solveengine.jobsvc.ProblemOrBuilder> datafilesBuilder_;

    /**
     * <pre>
     * A list of data files
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
     */
    public java.util.List<com.satalia.solveengine.jobsvc.Problem> getDatafilesList() {
      if (datafilesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(datafiles_);
      } else {
        return datafilesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * A list of data files
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
     */
    public int getDatafilesCount() {
      if (datafilesBuilder_ == null) {
        return datafiles_.size();
      } else {
        return datafilesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * A list of data files
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
     */
    public com.satalia.solveengine.jobsvc.Problem getDatafiles(int index) {
      if (datafilesBuilder_ == null) {
        return datafiles_.get(index);
      } else {
        return datafilesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * A list of data files
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
     */
    public Builder setDatafiles(
        int index, com.satalia.solveengine.jobsvc.Problem value) {
      if (datafilesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDatafilesIsMutable();
        datafiles_.set(index, value);
        onChanged();
      } else {
        datafilesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of data files
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
     */
    public Builder setDatafiles(
        int index, com.satalia.solveengine.jobsvc.Problem.Builder builderForValue) {
      if (datafilesBuilder_ == null) {
        ensureDatafilesIsMutable();
        datafiles_.set(index, builderForValue.build());
        onChanged();
      } else {
        datafilesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of data files
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
     */
    public Builder addDatafiles(com.satalia.solveengine.jobsvc.Problem value) {
      if (datafilesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDatafilesIsMutable();
        datafiles_.add(value);
        onChanged();
      } else {
        datafilesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of data files
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
     */
    public Builder addDatafiles(
        int index, com.satalia.solveengine.jobsvc.Problem value) {
      if (datafilesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDatafilesIsMutable();
        datafiles_.add(index, value);
        onChanged();
      } else {
        datafilesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of data files
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
     */
    public Builder addDatafiles(
        com.satalia.solveengine.jobsvc.Problem.Builder builderForValue) {
      if (datafilesBuilder_ == null) {
        ensureDatafilesIsMutable();
        datafiles_.add(builderForValue.build());
        onChanged();
      } else {
        datafilesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of data files
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
     */
    public Builder addDatafiles(
        int index, com.satalia.solveengine.jobsvc.Problem.Builder builderForValue) {
      if (datafilesBuilder_ == null) {
        ensureDatafilesIsMutable();
        datafiles_.add(index, builderForValue.build());
        onChanged();
      } else {
        datafilesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of data files
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
     */
    public Builder addAllDatafiles(
        java.lang.Iterable<? extends com.satalia.solveengine.jobsvc.Problem> values) {
      if (datafilesBuilder_ == null) {
        ensureDatafilesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, datafiles_);
        onChanged();
      } else {
        datafilesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * A list of data files
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
     */
    public Builder clearDatafiles() {
      if (datafilesBuilder_ == null) {
        datafiles_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        datafilesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A list of data files
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
     */
    public Builder removeDatafiles(int index) {
      if (datafilesBuilder_ == null) {
        ensureDatafilesIsMutable();
        datafiles_.remove(index);
        onChanged();
      } else {
        datafilesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * A list of data files
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
     */
    public com.satalia.solveengine.jobsvc.Problem.Builder getDatafilesBuilder(
        int index) {
      return getDatafilesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * A list of data files
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
     */
    public com.satalia.solveengine.jobsvc.ProblemOrBuilder getDatafilesOrBuilder(
        int index) {
      if (datafilesBuilder_ == null) {
        return datafiles_.get(index);  } else {
        return datafilesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * A list of data files
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
     */
    public java.util.List<? extends com.satalia.solveengine.jobsvc.ProblemOrBuilder> 
         getDatafilesOrBuilderList() {
      if (datafilesBuilder_ != null) {
        return datafilesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(datafiles_);
      }
    }
    /**
     * <pre>
     * A list of data files
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
     */
    public com.satalia.solveengine.jobsvc.Problem.Builder addDatafilesBuilder() {
      return getDatafilesFieldBuilder().addBuilder(
          com.satalia.solveengine.jobsvc.Problem.getDefaultInstance());
    }
    /**
     * <pre>
     * A list of data files
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
     */
    public com.satalia.solveengine.jobsvc.Problem.Builder addDatafilesBuilder(
        int index) {
      return getDatafilesFieldBuilder().addBuilder(
          index, com.satalia.solveengine.jobsvc.Problem.getDefaultInstance());
    }
    /**
     * <pre>
     * A list of data files
     * </pre>
     *
     * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
     */
    public java.util.List<com.satalia.solveengine.jobsvc.Problem.Builder> 
         getDatafilesBuilderList() {
      return getDatafilesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.satalia.solveengine.jobsvc.Problem, com.satalia.solveengine.jobsvc.Problem.Builder, com.satalia.solveengine.jobsvc.ProblemOrBuilder> 
        getDatafilesFieldBuilder() {
      if (datafilesBuilder_ == null) {
        datafilesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.satalia.solveengine.jobsvc.Problem, com.satalia.solveengine.jobsvc.Problem.Builder, com.satalia.solveengine.jobsvc.ProblemOrBuilder>(
                datafiles_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        datafiles_ = null;
      }
      return datafilesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:solver.jobs.CreateJobRequest)
  }

  // @@protoc_insertion_point(class_scope:solver.jobs.CreateJobRequest)
  private static final com.satalia.solveengine.jobsvc.CreateJobRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.satalia.solveengine.jobsvc.CreateJobRequest();
  }

  public static com.satalia.solveengine.jobsvc.CreateJobRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CreateJobRequest>
      PARSER = new com.google.protobuf.AbstractParser<CreateJobRequest>() {
    @java.lang.Override
    public CreateJobRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CreateJobRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CreateJobRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CreateJobRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.satalia.solveengine.jobsvc.CreateJobRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

