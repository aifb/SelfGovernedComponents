// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jobsvc.proto

package com.satalia.solveengine.jobsvc;

public interface CreateJobRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:solver.jobs.CreateJobRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A map of SolveEngine configuration options
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 1;</code>
   */
  int getOptionsCount();
  /**
   * <pre>
   * A map of SolveEngine configuration options
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 1;</code>
   */
  boolean containsOptions(
      java.lang.String key);
  /**
   * Use {@link #getOptionsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getOptions();
  /**
   * <pre>
   * A map of SolveEngine configuration options
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 1;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getOptionsMap();
  /**
   * <pre>
   * A map of SolveEngine configuration options
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 1;</code>
   */

  java.lang.String getOptionsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * A map of SolveEngine configuration options
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 1;</code>
   */

  java.lang.String getOptionsOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * A list of job inputs
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem problems = 2;</code>
   */
  java.util.List<com.satalia.solveengine.jobsvc.Problem> 
      getProblemsList();
  /**
   * <pre>
   * A list of job inputs
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem problems = 2;</code>
   */
  com.satalia.solveengine.jobsvc.Problem getProblems(int index);
  /**
   * <pre>
   * A list of job inputs
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem problems = 2;</code>
   */
  int getProblemsCount();
  /**
   * <pre>
   * A list of job inputs
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem problems = 2;</code>
   */
  java.util.List<? extends com.satalia.solveengine.jobsvc.ProblemOrBuilder> 
      getProblemsOrBuilderList();
  /**
   * <pre>
   * A list of job inputs
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem problems = 2;</code>
   */
  com.satalia.solveengine.jobsvc.ProblemOrBuilder getProblemsOrBuilder(
      int index);

  /**
   * <pre>
   * The timeout for the solver in seconds (minimum=60)
   * </pre>
   *
   * <code>int32 timeout = 3;</code>
   */
  int getTimeout();

  /**
   * <pre>
   * A list of data files
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
   */
  java.util.List<com.satalia.solveengine.jobsvc.Problem> 
      getDatafilesList();
  /**
   * <pre>
   * A list of data files
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
   */
  com.satalia.solveengine.jobsvc.Problem getDatafiles(int index);
  /**
   * <pre>
   * A list of data files
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
   */
  int getDatafilesCount();
  /**
   * <pre>
   * A list of data files
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
   */
  java.util.List<? extends com.satalia.solveengine.jobsvc.ProblemOrBuilder> 
      getDatafilesOrBuilderList();
  /**
   * <pre>
   * A list of data files
   * </pre>
   *
   * <code>repeated .solver.jobs.Problem datafiles = 4;</code>
   */
  com.satalia.solveengine.jobsvc.ProblemOrBuilder getDatafilesOrBuilder(
      int index);
}
